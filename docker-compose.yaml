version: '3.8'
services:
  # client:
  #   image: crawler/client
  #   build:
  #     context: ./client/
  #   restart: always
  #   ports:
  #     - 8080:80
  #   environment:
  #     SERVER_URL: server
  #     PROXY_PASS_URL: http://server/api
  #   depends_on:
  #     - server
  server:
    image: crawler/server
    build:
      context: ./server/
    ports:
      - 8092:80
    restart: always
    depends_on:
      database: 
        condition: service_healthy
    environment:
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: database
  database:
    image: crawler/database
    build:
      context: ./database/
    restart: always
    ports:
      - 8091:5432
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - postgres_data:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    depends_on:
      - database
    ports:
      - 8090:8080
volumes:
  postgres_data: